name: Semantic Release Template

on:
  workflow_call:
    inputs:
      node_version:
        required: false
        type: string
        default: '18'
    secrets:
      GH_TOKEN:
        required: true

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create release config
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": ["main"],
            "plugins": [
              ["@semantic-release/commit-analyzer", {
                "preset": "angular",
                "releaseRules": [
                  {"type": "docs", "release": "patch"},
                  {"type": "refactor", "release": "patch"},
                  {"type": "style", "release": "patch"}
                ]
              }],
              "@semantic-release/release-notes-generator"
            ],
            "dryRun": true,
            "ci": false
          }
          EOF

      - name: Remove npm-specific configuration
        run: |
          echo "{}" > package.json

      - run: npm i @semantic-release/commit-analyzer @semantic-release/release-notes-generator semantic-release

      - name: Get Next Version
        id: next-version
        run: |
          VERSION=$(npx semantic-release --dry-run | grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' || echo "")
          if [ ! -z "$VERSION" ]; then
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Found new version: $VERSION"
          else
            echo "No new version to be released"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}